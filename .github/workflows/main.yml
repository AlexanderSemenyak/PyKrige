name: Continuous Integration

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  source_check:
    name: source check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions\setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: black check
        run: |
          python -m black --check  --diff --color pykrige/ examples/ tests/

  build_sdist:
    name: sdist and coveralls
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Python 3.8
        uses: actions\setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build coveralls>=3.0.0
          pip install --editable .[test]

      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pytest --cov pykrige --cov-report term-missing -v tests/
          python -m coveralls --service=github

      - name: Build sdist
        run: |
          # PEP 517 package builder from pypa
          python -m build --sdist --outdir dist .

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: wheels on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_TEST_EXTRAS: test
          CIBW_TEST_COMMAND: pytest -v {project}/tests
        with:
          output-dir: dist

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  upload_to_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish to Test PyPI
        if: github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        # only if tagged
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
